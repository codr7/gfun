* add Form.Val() *Val
** use in let/set
** bind during emit instead if != nil
*** Push/PopEnv() in let-macro
* make else optional in if-macro
** readme
* add and/or macros
** readme
* add first class syms
** add LOAD_SYM op
*** use id
** add ReadQuote()
** add Form.Quote() Val
** add M.SymType
* add string interpolation
** (let [bar 42] "foo %bar")
** parse form after %
** add Stream type
*** strings.Builder
** add STREAM_BEG/END(Reg) ops
*** end puts result in reg 0
** add STREAM_DUMP(Reg, Reg) op
** add STREAM_PUTS(Reg, string) op
*** write as many ops as needed
*** encode size & use remaining bits
** add EmitLoadString
*** use existing ops
* add (include ...) macro
* profile
* add user macros
* typecheck Fun args
* typecheck Fun ret
* speed up Isa using static array
* add Lib
** add abc
*** move M types
* add Multi
** add DISPATCH op


